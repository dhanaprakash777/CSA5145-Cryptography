#include <stdio.h>
#include <string.h>
#include <ctype.h>

int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}

int isValidA(int a) {
    return gcd(a, 26) == 1;
}

void affineEncrypt(char* text, int a, int b, char* result) {
    for (int i = 0; text[i] != '\0'; ++i) {
        if (isalpha(text[i])) {
            char offset = isupper(text[i]) ? 'A' : 'a';
            result[i] = (char) (((a * (text[i] - offset) + b) % 26) + offset);
        } else {
            result[i] = text[i];
        }
    }
    result[strlen(text)] = '\0';
}

int main() {
    char text[100], result[100];
    int a, b;

    printf("Enter the plaintext: ");
    fgets(text, sizeof(text), stdin);
    text[strcspn(text, "\n")] = '\0';

    printf("Enter a (must be coprime with 26): ");
    scanf("%d", &a);
    while (!isValidA(a)) {
        printf("Invalid value for a. Enter a (must be coprime with 26): ");
        scanf("%d", &a);
    }

    printf("Enter b: ");
    scanf("%d", &b);

    affineEncrypt(text, a, b, result);

    printf("Encrypted text: %s\n", result);

    return 0;
}
